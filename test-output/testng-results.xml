<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Long String - Given a valid uuid v4 id with alphabetes only When a refund transaction is initiated the expected status code is 201 and the response fron the server is = 201]]>
    </line>
    <line>
      <![CDATA[Blocked Concurrent Transactions - Given a valid uuid v4 id When a refund transaction is initiated the expected status code is 423 and the respose from the server is = 423]]>
    </line>
    <line>
      <![CDATA[Concurrent Transactions - Given a valid uuid v4 id When a refund transaction is initiated the expected status code is 201 and the respose from the server is = 423]]>
    </line>
    <line>
      <![CDATA[Empty String - Given an invalid uuid v4 id with NULL/Empty String When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 500]]>
    </line>
    <line>
      <![CDATA[Long String - Given an invalid uuid v4 id with additional length When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
    </line>
    <line>
      <![CDATA[Long String - Given a valid uuid v4 id with only nills When a refund transaction is initiated the expected status code is 201 and the response fron the server is = 201]]>
    </line>
    <line>
      <![CDATA[Non Hexagonal - Given an invalid uuid v4 id with 'z' When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
    </line>
    <line>
      <![CDATA[Short String - Given an invalid uuid v4 id with reduced length When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
    </line>
    <line>
      <![CDATA[Undefined UUD - Given an invalid uuid v4 id id When a refund transaction is initiated the expected status code is 404 and the response fron the server is = 404]]>
    </line>
    <line>
      <![CDATA[UUID Without Dashes - Given an invalid uuid v4 id without Dashes When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
    </line>
    <line>
      <![CDATA[validUUIDv4_valid - Given a valid uuid v4 id When a refund transaction is initiated the expected status code is 201 and the respose from the server is = 201]]>
    </line>
  </reporter-output>
  <suite started-at="2021-12-30T09:54:30 SAST" name="Default suite" finished-at="2021-12-30T09:54:44 SAST" duration-ms="14156">
    <groups>
    </groups>
    <test started-at="2021-12-30T09:54:30 SAST" name="Default test" finished-at="2021-12-30T09:54:44 SAST" duration-ms="14156">
      <class name="serviceRequest.postData">
        <test-method signature="alphabetsOnly()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:30 SAST" name="alphabetsOnly" finished-at="2021-12-30T09:54:34 SAST" duration-ms="4745" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Long String - Given a valid uuid v4 id with alphabetes only When a refund transaction is initiated the expected status code is 201 and the response fron the server is = 201]]>
            </line>
          </reporter-output>
        </test-method> <!-- alphabetsOnly -->
        <test-method signature="concurrentTransactions()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:34 SAST" name="concurrentTransactions" finished-at="2021-12-30T09:54:35 SAST" duration-ms="1054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concurrentTransactions -->
        <test-method signature="concurrentTransactions()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:34 SAST" name="concurrentTransactions" finished-at="2021-12-30T09:54:37 SAST" duration-ms="3054" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Blocked Concurrent Transactions - Given a valid uuid v4 id When a refund transaction is initiated the expected status code is 423 and the respose from the server is = 423]]>
            </line>
            <line>
              <![CDATA[Concurrent Transactions - Given a valid uuid v4 id When a refund transaction is initiated the expected status code is 201 and the respose from the server is = 423]]>
            </line>
          </reporter-output>
        </test-method> <!-- concurrentTransactions -->
        <test-method signature="emptyString()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:37 SAST" name="emptyString" finished-at="2021-12-30T09:54:38 SAST" duration-ms="35" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [500]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at serviceRequest.postData.emptyString(postData.java:120)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Empty String - Given an invalid uuid v4 id with NULL/Empty String When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 500]]>
            </line>
          </reporter-output>
        </test-method> <!-- emptyString -->
        <test-method signature="longString()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:38 SAST" name="longString" finished-at="2021-12-30T09:54:38 SAST" duration-ms="35" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Long String - Given an invalid uuid v4 id with additional length When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
            </line>
          </reporter-output>
        </test-method> <!-- longString -->
        <test-method signature="nills()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:38 SAST" name="nills" finished-at="2021-12-30T09:54:41 SAST" duration-ms="3037" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Long String - Given a valid uuid v4 id with only nills When a refund transaction is initiated the expected status code is 201 and the response fron the server is = 201]]>
            </line>
          </reporter-output>
        </test-method> <!-- nills -->
        <test-method signature="nonHexagonal()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:41 SAST" name="nonHexagonal" finished-at="2021-12-30T09:54:41 SAST" duration-ms="24" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Non Hexagonal - Given an invalid uuid v4 id with 'z' When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
            </line>
          </reporter-output>
        </test-method> <!-- nonHexagonal -->
        <test-method signature="shortString()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:41 SAST" name="shortString" finished-at="2021-12-30T09:54:41 SAST" duration-ms="34" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Short String - Given an invalid uuid v4 id with reduced length When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
            </line>
          </reporter-output>
        </test-method> <!-- shortString -->
        <test-method signature="undefinedID()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:41 SAST" name="undefinedID" finished-at="2021-12-30T09:54:41 SAST" duration-ms="28" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Undefined UUD - Given an invalid uuid v4 id id When a refund transaction is initiated the expected status code is 404 and the response fron the server is = 404]]>
            </line>
          </reporter-output>
        </test-method> <!-- undefinedID -->
        <test-method signature="uuidWithoutDashes()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:41 SAST" name="uuidWithoutDashes" finished-at="2021-12-30T09:54:41 SAST" duration-ms="24" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[UUID Without Dashes - Given an invalid uuid v4 id without Dashes When a refund transaction is initiated the expected status code is 400 and the response fron the server is = 400]]>
            </line>
          </reporter-output>
        </test-method> <!-- uuidWithoutDashes -->
        <test-method signature="validUUIDv4_valid()[pri:0, instance:serviceRequest.postData@7692d9cc]" started-at="2021-12-30T09:54:41 SAST" name="validUUIDv4_valid" finished-at="2021-12-30T09:54:44 SAST" duration-ms="3051" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[validUUIDv4_valid - Given a valid uuid v4 id When a refund transaction is initiated the expected status code is 201 and the respose from the server is = 201]]>
            </line>
          </reporter-output>
        </test-method> <!-- validUUIDv4_valid -->
      </class> <!-- serviceRequest.postData -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
